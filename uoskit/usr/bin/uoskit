#!/bin/bash

# 帮助函数
show_help() {
    echo ""
    echo "当前系统环境:" $XDG_SESSION_TYPE    
    echo "脚本使用方法: uoskit [-h] [-m] [-mc] [-s] [-c] [-l] [-d] [-p] [-a] [-ssh]"
    echo ""
    echo "用法：$0 [选项]..."
    echo "选项说明:"
    echo "  -h       显示帮助信息"
    echo "  -m       编译安装源码"
    echo "  -mc      只进行 debug 编译，不安装"
    echo "  -s       安装开发人员需要的软件包"
    echo "  -c       克隆项目"
    echo "  -l       添加源"
    echo "  -e       导出此系统的全量日志"
    echo "  -d       进行出包"
    echo "  -p       下载指定包或全量包"
    echo "  -a       进行激活操作"
    echo "  -ssh     配置ssh公钥信息"
    echo "  ..."
}

# 错误退出函数
error_exit() {
    echo "$1" >&2
    exit 1
}

# debug编译检查函数
debug_check(){
    if [ ! -d "debian" ]; then
      error_exit "当前不是源码文件！请在源码文件中运行脚本编译、安装、出包等操作！"
    fi

    if [ ! -d "build" ]; then
      mkdir -p build
    fi

    cd build

    if [ "$only_Run_cmake" = "true" ]; then
        sudo cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Debug ..
        [ $? -ne 0 ] && error_exit "命令 'sudo cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Debug ..' 执行失败。编译中止。"
        exit 0
    else
        sudo cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Debug ..
        [ $? -ne 0 ] && error_exit "命令 'sudo cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Debug ..' 执行失败。编译中止。"
        sudo make install -j8
        [ $? -ne 0 ] && error_exit "命令 'sudo make install -j8' 执行失败。安装中止。"
    fi
}

# 安装软件函数
install_software() {
    sudo apt install qtcreator qtbase5-dev qt5-default gdb gcc g++ cmake make git openssh-server devscripts -y
}

#检查源配置是否正确函数
function check_sources() {
    echo "源已配置完成，是否更新？(yes/no)"
    read answer
    while [ "$answer" != "yes" ] && [ "$answer" != "no" ] && [ "$answer" != "y" ] && [ "$answer" != "n" ]; do
        echo "请输入正确的选项：yes 或 no (y/n)"
        read answer
    done

    if [ "$answer" = "yes" ] || [ "$answer" = "y" ]; then
        sudo apt update
    else
        echo "脚本结束。"
        exit 0
    fi
}

# 检查是否提供参数，包括 --help 选项和 -m 参数的处理
if [ $# -eq 0 ] || [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    show_help
    exit 0
fi

# 解析参数选项
while [ "$#" -gt 0 ]; do
    case "$1" in
        "make" | "-m" | "-mc")
            operation="make"
            if [ "$1" = "-mc" ]; then
                only_Run_cmake="true"
            else
                only_Run_cmake="false"
            fi
            ;;
        "software" | "-s")
            operation="software"
            ;;
        "list" | "-l")
            operation="list"
            ;;
        "activation" | "-a")
            operation="activation"
            ;;
        "clone" | "-c") #在kit_src中
            operation="clone"
            ;;
        "dpkg" | "-d") #在kit_src中
            operation="dpkg"
            ;;
        "package" | "-p") #在kit_src中
            operation="package"
            ;;
        "export" | "-e") #在kit_src中
            operation="export"
            ;;
        "-ssh") #在kit_src中
            operation="ssh"
            ;;
        *)
            show_help
            error_exit
            ;;
    esac
    shift
done

case "$operation" in
    "make")	 
        debug_check
        echo "已完成安装，是否重启？(yes/no)"
        read answer
        while [[ ! $answer =~ ^(yes|no|y|n)$ ]]; do
            echo "请输入正确的选项：yes 或 no (y/n)"
            read answer
        done

        if [[ "$answer" =~ ^(yes|y)$ ]]; then
            sudo reboot
        else
            echo "脚本结束。"
            exit 0
        fi
        ;;
    "software")
        echo "请确认 sources.list 是否配置完成(yes/no)"
        read confirm_sources
        while [[ ! $confirm_sources =~ ^(yes|no|y|n)$ ]]; do
            echo "请输入正确的选项：yes 或 no (y/n)"
            read confirm_sources
        done

        if [[ "$confirm_sources" =~ ^(yes|y)$ ]]; then
            install_software
        else
            uoskit list
        fi
        ;;
    "clone")
        bash /usr/bin/kit_src/clone_project
        ;;
    "list")
        echo "当前机型选择1042、1050、M900(手动更改yes/y?)"
        read vim_sources
        while [[ ! $vim_sources =~ ^(1042|1050|yes|y|M900)$ ]]; do
            echo "请输入正确的选项：1042、1050、M900、yes/y"
            read vim_sources
        done

        case "$vim_sources" in
            "M900")
                echo "备份当前源："
                cat /etc/apt/sources.list
                sudo sh -c "echo '' > /etc/apt/sources.list"
                sudo sh -c "cat /usr/bin/uoskit_M900_list.txt >> /etc/apt/sources.list"
		echo ""
                check_sources
                ;;
            "1042")
                echo "还未推出"
                exit 0
                #sudo sh -c "echo '' > /etc/apt/sources.list"
                #sudo sh -c "cat ~/usr/bin/uoskit_1042_list.txt" >> /etc/apt/sources.list
                #check_sources
                ;;
            "1050")
                echo "还未推出"
                exit 0
                #sudo sh -c "echo '' > /etc/apt/sources.list"
                #sudo sh -c "cat ~/usr/bin/uoskit_1042_list.txt" >> /etc/apt/sources.list
                #check_sources
                ;;
            "yes"|"y")
                sudo vim /etc/apt/sources.list
                sudo apt update
                ;;
        esac
        ;;
    "export")
       bash /usr/bin/kit_src/export_logs
	;;

    "dpkg")
       bash /usr/bin/kit_src/build_package
	;;
	
    "package")
       bash /usr/bin/kit_src/download_packages
	;;
	
    "activation")
	echo "将进行kms激活，是否进行激活尝试?(yes/no)"
       echo "（有可能退出当前激活）"
	read activation_method
	while [[ ! $activation_method =~ ^(yes|y|no|n)$ ]]; do
	   echo "请输入正确的选项：yes 或 no (y/n)"
           read activation_method
	done
	
	if [[ "$activation_method" =~ ^(yes|y)$ ]]; then
	   uos-activator-cmd -s --kms kms.uniontech.com:8900:Vlc1cGIyNTBaV05v
	   echo "已进行kms激活，请验证。"
	else
	   exit 0
	fi
	;;
    "ssh")
       cd /usr/bin/kit_src
	bash ./ssh_config
	;;
	
	*)
	show_help
	error_exit
	;;

esac
	
exit 0

