#!/bin/bash

# 错误退出函数
error_exit() {
    echo "错误：$1" >&2
    # 其他调试信息
    exit 1
}

# 定义项目数组
projects=("deepin-kwin" "kwayland" "dde-kwin" "base/xorg-server" "dde-session-shell")

echo "要克隆哪个项目？(确保源和软件包已经安装)"

# 显示项目选项
for ((i=0; i<${#projects[@]}; i++)); do
    echo "$((i+1)). ${projects[i]}"
done

# 循环读取用户输入，直到输入正确的选项
while true; do
    read -p "请输入项目编号: " clone_Project_number
    if ((clone_Project_number >= 1 && clone_Project_number <= ${#projects[@]})); then
        clone_Project_name="${projects[clone_Project_number-1]}"
        break
    else
        echo "请输入正确的选项数字: 1、2、3、4、5"
    fi
done

# 构建项目URL
git_url="http://gerrit.uniontech.com/"
project_url="$git_url$clone_Project_name"

# 克隆项目
git clone "$project_url" || error_exit "clone失败，请查看网络或者权限是否有问题，请修正后，重新运行。"

# 如果是 xorg-server 项目，额外处理
if [ "$clone_Project_name" == "base/xorg-server" ]; then
    clone_Project_name="xorg-server"
fi

# 进入项目目录并设置 Git 钩子
cd "$clone_Project_name" && mkdir -p .git/hooks && \
    curl -Lo "$(git rev-parse --git-dir)/hooks/commit-msg" "$git_url/tools/hooks/commit-msg" && \
    chmod +x "$(git rev-parse --git-dir)/hooks/commit-msg"

# 安装项目依赖
echo ""
echo ""
echo "尝试安装$clone_Project_name依赖..."
echo ""
echo ""

cd debian
rely_name=$(grep "Source:" control | awk '{print $2}')
sudo apt build-dep $rely_name

if [ $? -ne 0 ]; then
    error_exit "安装依赖失败，请修正后，重新运行。"
fi

echo "操作完成！"
