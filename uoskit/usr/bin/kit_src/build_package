#!/bin/bash

# 错误退出函数
error_exit() {
    echo "$1" >&2
    exit 1
}

if [ ! -d "debian" ]; then
   error_exit "当前不是源码文件！请在源码文件中运行脚本编译、安装、出包等操作！"
fi

# 进入debian目录并获取Source字段
cd debian
source_name=$(grep -E "^Source:" control | awk '{print $2}')

# 根据Source字段进行不同操作
case "$source_name" in
    "kwin"|"xorg-server")
        # 检查rules文件末尾是否有override_dh_shlibdeps
        if ! grep -q "override_dh_shlibdeps" rules; then
            echo -e "override_dh_shlibdeps:\n\t\tdh_shlibdeps --dpkg-shlibdeps-params=--ignore-missing-info" >> rules
        fi
        cd ..
        ;;
    "kwayland")
        # 切换回源码目录
        cd ..
        # 注释 if (BUILD_TESTING) 到 endif() 之间的内容
        sed -i '/if (BUILD_TESTING)/, /endif()/ s/^/#/' CMakeLists.txt
        ;;
    *)
        # 输出提示信息
        echo "Source字段检查跳过(非 kwin、kwayland、xorg-server)：$source_name"
        echo "脚本继续执行..."
        echo ""
        ;;
esac

cd ..

if [ ! -d "build" ]; then
   mkdir -p build
fi

cd build

sudo cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Debug ..
if [ $? -ne 0 ]; then
  error_exit "命令 'sudo cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Debug ..' 执行失败。编译中止。"
fi

cd ..

echo ""
echo ""
echo "使用 debuild 进行 debug 打包"
echo ""
echo ""

# 使用debuild进行打包
sudo DEB_CFLAGS_SET="-g3 -O0" debuild -b -us -uc -j8

exit 0
